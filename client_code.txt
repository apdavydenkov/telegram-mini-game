// Внимание! Это собранный код всех файлов client проекта. Обязательно изучи его до конца и прими в работу. При необходимости ты можешь создать новые файлы.

// Далее код файла App.js:
import React from 'react';
import { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';
import LoginPage from './pages/LoginPage';
import RegisterPage from './pages/RegisterPage';
import Dashboard from './components/Dashboard/Dashboard';

const PrivateRoute = ({ children }) => {
  const token = localStorage.getItem('token');
  return token ? children : <Navigate to="/login" replace />;
};

function App() {
  return (
    <Router>
      <div className="App">
        <Routes>
          <Route path="/login" element={<LoginPage />} />
          <Route path="/register" element={<RegisterPage />} />
          <Route 
            path="/dashboard" 
            element={
              <PrivateRoute>
                <Dashboard />
              </PrivateRoute>
            } 
          />
          <Route path="/" element={<Navigate to="/login" replace />} />
        </Routes>
      </div>
    </Router>
  );
}

export default App;

// Далее код файла index.js:
import React from 'react';
import ReactDOM from 'react-dom/client';
import './index.css';
import App from './App';
import reportWebVitals from './reportWebVitals';

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);

// If you want to start measuring performance in your app, pass a function
// to log results (for example: reportWebVitals(console.log))
// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals
reportWebVitals();


// Далее код файла reportWebVitals.js:
const reportWebVitals = onPerfEntry => {
  if (onPerfEntry && onPerfEntry instanceof Function) {
    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {
      getCLS(onPerfEntry);
      getFID(onPerfEntry);
      getFCP(onPerfEntry);
      getLCP(onPerfEntry);
      getTTFB(onPerfEntry);
    });
  }
};

export default reportWebVitals;


// Далее код файла components\Auth\Login.js:
import React, { useState } from 'react';
import axios from 'axios';
import styled from 'styled-components';
import { useNavigate } from 'react-router-dom';

const LoginContainer = styled.div`
  max-width: 300px;
  margin: 0 auto;
  padding: 20px;
  border: 1px solid #ddd;
  border-radius: 5px;
`;

const Input = styled.input`
  width: 100%;
  padding: 10px;
  margin: 10px 0;
  border: 1px solid #ddd;
  border-radius: 3px;
`;

const Button = styled.button`
  width: 100%;
  padding: 10px;
  background-color: #007bff;
  color: white;
  border: none;
  border-radius: 3px;
  cursor: pointer;

  &:hover {
    background-color: #0056b3;
  }
`;

	const Login = () => {
	  const [username, setUsername] = useState('');
	  const [password, setPassword] = useState('');
	  const [error, setError] = useState('');
	  const navigate = useNavigate();

	  const handleSubmit = async (e) => {
		e.preventDefault();
		setError(''); // Сбрасываем ошибку перед новой попыткой
		try {
		  const response = await axios.post('http://localhost:5000/api/auth/login', { username, password });
		  localStorage.setItem('token', response.data.token);
		  navigate('/dashboard');
		} catch (error) {
		  console.error('Login error:', error);
		  setError(error.response?.data?.message || 'An error occurred during login');
		}
	  };

  return (
    <LoginContainer>
      <h2>Вход</h2>
	  {error && <ErrorMessage>{error}</ErrorMessage>}
      <form onSubmit={handleSubmit}>
        <Input
          type="text"
          placeholder="Имя пользователя"
          value={username}
          onChange={(e) => setUsername(e.target.value)}
        />
        <Input
          type="password"
          placeholder="Пароль"
          value={password}
          onChange={(e) => setPassword(e.target.value)}
        />
        <Button type="submit">Войти</Button>
      </form>
    </LoginContainer>
  );
};

const ErrorMessage = styled.div`
  color: red;
  margin-bottom: 10px;
`;

export default Login; 


// Далее код файла components\Auth\Register.js:
import React, { useState } from 'react';
import axios from 'axios';
import styled from 'styled-components';
import { useNavigate } from 'react-router-dom';

const RegisterContainer = styled.div`
  max-width: 300px;
  margin: 0 auto;
  padding: 20px;
  border: 1px solid #ddd;
  border-radius: 5px;
`;

const Input = styled.input`
  width: 100%;
  padding: 10px;
  margin: 10px 0;
  border: 1px solid #ddd;
  border-radius: 3px;
`;

const Button = styled.button`
  width: 100%;
  padding: 10px;
  background-color: #28a745;
  color: white;
  border: none;
  border-radius: 3px;
  cursor: pointer;

  &:hover {
    background-color: #218838;
  }
`;

	const Register = () => {
	  const [username, setUsername] = useState('');
	  const [email, setEmail] = useState('');
	  const [password, setPassword] = useState('');
	  const [error, setError] = useState('');
	  const navigate = useNavigate();

	  const handleSubmit = async (e) => {
		e.preventDefault();
		setError(''); // Сбрасываем ошибку перед новой попыткой
		try {
		  await axios.post('http://localhost:5000/api/auth/register', { username, email, password });
		  const loginResponse = await axios.post('http://localhost:5000/api/auth/login', { username, password });
		  localStorage.setItem('token', loginResponse.data.token);
		  navigate('/dashboard');
		} catch (error) {
		  console.error('Registration error:', error);
		  setError(error.response?.data?.message || 'An error occurred during registration');
		}
	  };

  return (
    <RegisterContainer>
      <h2>Регистрация</h2>
	  {error && <ErrorMessage>{error}</ErrorMessage>}
      <form onSubmit={handleSubmit}>
        <Input
          type="text"
          placeholder="Имя пользователя"
          value={username}
          onChange={(e) => setUsername(e.target.value)}
        />
        <Input
          type="email"
          placeholder="Email"
          value={email}
          onChange={(e) => setEmail(e.target.value)}
        />
        <Input
          type="password"
          placeholder="Пароль"
          value={password}
          onChange={(e) => setPassword(e.target.value)}
        />
        <Button type="submit">Зарегистрироваться</Button>
      </form>
    </RegisterContainer>
  );
};

const ErrorMessage = styled.div`
  color: red;
  margin-bottom: 10px;
`;

export default Register;

// Далее код файла components\Character\Character.js:
import React from 'react';

const Character = ({ character }) => {
  const expPercentage = character.experience ? (character.experience / 100) * 100 : 0;
  const healthPercentage = character.maxHealth ? (character.health / character.maxHealth) * 100 : 0;

  return (
    <div className="w-full max-w-3xl mx-auto bg-gray-100 p-4 rounded-lg shadow-md">
      <div className="grid grid-cols-12 grid-rows-17 gap-1">
        <div className="col-span-12 text-center text-xl font-bold flex items-center justify-center">
          {character.name} 
          <span className="ml-2 bg-blue-500 text-white rounded-md w-6 h-6 flex items-center justify-center text-sm">
            {character.level}
          </span>
        </div>
        
        {/* EXP Bar */}
        <div className="col-span-6 col-start-4 row-start-2 bg-yellow-200 rounded-md overflow-hidden">
          <div 
            className="h-full bg-yellow-400 flex items-center justify-center text-xs font-bold"
          >
            EXP: {character.experience}/100
          </div>
        </div>
        
        {/* HP Bar */}
        <div className="col-span-6 col-start-4 row-start-3 bg-red-200 rounded-md overflow-hidden">
          <div 
            className="h-full bg-red-500 flex items-center justify-center text-xs font-bold text-white"
          >
            HP: {character.health}/{character.maxHealth}
          </div>
        </div>

        {/* Character silhouette */}
        <div className="col-span-6 row-span-8 col-start-4 row-start-4 bg-gray-300 rounded-md flex items-center justify-center">
          <img src="https://placehold.co/200x300?text=Character" alt="Character Silhouette" className="w-full h-full object-cover rounded-md" />
        </div>

        {/* Banner */}
        <div className="col-span-3 row-span-3 row-start-2 bg-white rounded-md flex items-center justify-center overflow-hidden">
          <img src="https://placehold.co/60x60?text=Banner" alt="Banner" className="w-full h-full object-cover" />
        </div>

        {/* Helmet */}
        <div className="col-span-3 row-span-3 col-start-10 row-start-2 bg-white rounded-md flex items-center justify-center overflow-hidden">
          <img src="https://placehold.co/60x60?text=Helmet" alt="Helmet" className="w-full h-full object-cover" />
        </div>

        {/* Weapon */}
        <div className="col-span-3 row-span-3 row-start-5 bg-white rounded-md flex items-center justify-center overflow-hidden">
          <img src="https://placehold.co/60x60?text=Weapon" alt="Weapon" className="w-full h-full object-cover" />
        </div>

        {/* Shield */}
        <div className="col-span-3 row-span-3 col-start-10 row-start-5 bg-white rounded-md flex items-center justify-center overflow-hidden">
          <img src="https://placehold.co/60x60?text=Shield" alt="Shield" className="w-full h-full object-cover" />
        </div>

        {/* Armor */}
        <div className="col-span-3 row-span-3 row-start-8 bg-white rounded-md flex items-center justify-center overflow-hidden">
          <img src="https://placehold.co/60x60?text=Armor" alt="Armor" className="w-full h-full object-cover" />
        </div>

        {/* Cloak */}
        <div className="col-span-3 row-span-3 col-start-10 row-start-8 bg-white rounded-md flex items-center justify-center overflow-hidden">
          <img src="https://placehold.co/60x60?text=Cloak" alt="Cloak" className="w-full h-full object-cover" />
        </div>

        {/* Belt */}
        <div className="col-span-3 row-span-3 row-start-11 bg-white rounded-md flex items-center justify-center overflow-hidden">
          <img src="https://placehold.co/60x60?text=Belt" alt="Belt" className="w-full h-full object-cover" />
        </div>

        {/* Boots */}
        <div className="col-span-3 row-span-3 col-start-10 row-start-11 bg-white rounded-md flex items-center justify-center overflow-hidden">
          <img src="https://placehold.co/60x60?text=Boots" alt="Boots" className="w-full h-full object-cover" />
        </div>

        {/* Inventory items */}
        <div className="col-span-2 row-span-2 col-start-4 row-start-15 bg-white rounded-md flex items-center justify-center overflow-hidden">
          <img src="https://placehold.co/40x40?text=Item+1" alt="Item 1" className="w-full h-full object-cover" />
        </div>
        <div className="col-span-2 row-span-2 col-start-6 row-start-15 bg-white rounded-md flex items-center justify-center overflow-hidden">
          <img src="https://placehold.co/40x40?text=Item+2" alt="Item 2" className="w-full h-full object-cover" />
        </div>
        <div className="col-span-2 row-span-2 col-start-8 row-start-15 bg-white rounded-md flex items-center justify-center overflow-hidden">
          <img src="https://placehold.co/40x40?text=Item+3" alt="Item 3" className="w-full h-full object-cover" />
        </div>

        {/* Skills */}
        <div className="col-span-2 row-span-2 row-start-16 bg-white rounded-md flex items-center justify-center overflow-hidden">
          <img src="https://placehold.co/40x40?text=Skill+1" alt="Skill 1" className="w-full h-full object-cover" />
        </div>
        <div className="col-span-2 row-span-2 col-start-3 row-start-16 bg-white rounded-md flex items-center justify-center overflow-hidden">
          <img src="https://placehold.co/40x40?text=Skill+2" alt="Skill 2" className="w-full h-full object-cover" />
        </div>
        <div className="col-span-2 row-span-2 col-start-5 row-start-16 bg-white rounded-md flex items-center justify-center overflow-hidden">
          <img src="https://placehold.co/40x40?text=Skill+3" alt="Skill 3" className="w-full h-full object-cover" />
        </div>
        <div className="col-span-2 row-span-2 col-start-7 row-start-16 bg-white rounded-md flex items-center justify-center overflow-hidden">
          <img src="https://placehold.co/40x40?text=Skill+4" alt="Skill 4" className="w-full h-full object-cover" />
        </div>
        <div className="col-span-2 row-span-2 col-start-9 row-start-16 bg-white rounded-md flex items-center justify-center overflow-hidden">
          <img src="https://placehold.co/40x40?text=Skill+5" alt="Skill 5" className="w-full h-full object-cover" />
        </div>
        <div className="col-span-2 row-span-2 col-start-11 row-start-16 bg-white rounded-md flex items-center justify-center overflow-hidden">
          <img src="https://placehold.co/40x40?text=Skill+6" alt="Skill 6" className="w-full h-full object-cover" />
        </div>
      </div>
    </div>
  );
};

export default Character;

// Далее код файла components\Character\CharacterStats.js:
import React from 'react';
import { FaDumbbell, FaRunning, FaBrain, FaFistRaised, FaShieldAlt, FaBullseye, FaWind, FaHeartbeat } from 'react-icons/fa';

const CharacterInfo = ({ character, onCharacterUpdate, showDetailedStats }) => {
  const calculateDamage = () => character.strength * 10;
  const calculateArmor = () => character.strength * 5;
  const calculateCrit = () => (character.strength * 3) + (character.dexterity * 3);
  const calculateDodge = () => (character.dexterity * 3) + (character.intelligence * 3);
  const calculateHealthRegen = () => 1 + (character.intelligence * 0.05);

	const StatItem = ({ icon: Icon, label, value }) => (
	  <div className="flex justify-between items-center p-2 bg-white rounded-lg shadow-sm mb-2">
		<span className="flex items-center text-gray-700">
		  <Icon className="mr-2 text-blue-500" />
		  {label}:
		</span>
		<span className="font-semibold text-blue-600">{value}</span>
	  </div>
	);

  return (
    <div className="grid grid-cols-2 gap-4">
      <div>
        <h3 className="text-lg font-bold mb-3 text-gray-800">Навыки</h3>
        <StatItem icon={FaDumbbell} label="Сила" value={character.strength} />
        <StatItem icon={FaRunning} label="Ловкость" value={character.dexterity} />
        <StatItem icon={FaBrain} label="Интеллект" value={character.intelligence} />
      </div>
      <div>
        <h3 className="text-lg font-bold mb-3 text-gray-800">Характеристики</h3>
        <StatItem icon={FaFistRaised} label="Урон" value={calculateDamage()} />
        <StatItem icon={FaShieldAlt} label="Броня" value={calculateArmor()} />
        <StatItem icon={FaBullseye} label="Крит" value={calculateCrit()} />
        <StatItem icon={FaWind} label="Уворот" value={calculateDodge()} />
        <StatItem icon={FaHeartbeat} label="Реген" value={`${calculateHealthRegen().toFixed(2)}/сек`} />
      </div>
    </div>
  );
};

export default CharacterInfo;

// Далее код файла components\Character\CreateCharacter.js:
import React, { useState } from 'react';
import axios from 'axios';
import styled from 'styled-components';

const CreateCharacterContainer = styled.div`
  max-width: 400px;
  margin: 0 auto;
  padding: 20px;
  border: 1px solid #ddd;
  border-radius: 5px;
  background-color: #f9f9f9;
`;

const Input = styled.input`
  width: 100%;
  padding: 10px;
  margin: 10px 0;
  border: 1px solid #ddd;
  border-radius: 3px;
`;

const Select = styled.select`
  width: 100%;
  padding: 10px;
  margin: 10px 0;
  border: 1px solid #ddd;
  border-radius: 3px;
`;

const Button = styled.button`
  width: 100%;
  padding: 10px;
  background-color: #4CAF50;
  color: white;
  border: none;
  border-radius: 3px;
  cursor: pointer;

  &:hover {
    background-color: #45a049;
  }
`;

const StatContainer = styled.div`
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin: 10px 0;
`;

const StatButton = styled.button`
  padding: 5px 10px;
  background-color: #007bff;
  color: white;
  border: none;
  border-radius: 3px;
  cursor: pointer;

  &:disabled {
    background-color: #cccccc;
  }
`;

const CreateCharacter = ({ onCharacterCreated }) => {
  const [name, setName] = useState('');
  const [characterClass, setCharacterClass] = useState('Warrior');
  const [strength, setStrength] = useState(10);
  const [dexterity, setDexterity] = useState(10);
  const [intelligence, setIntelligence] = useState(10);
  const [availablePoints, setAvailablePoints] = useState(5);

  const handleStatChange = (stat, value) => {
    if (availablePoints > 0 || value < 0) {
      switch(stat) {
        case 'strength':
          setStrength(prev => Math.max(10, prev + value));
          break;
        case 'dexterity':
          setDexterity(prev => Math.max(10, prev + value));
          break;
        case 'intelligence':
          setIntelligence(prev => Math.max(10, prev + value));
          break;
        default:
          break;
      }
      setAvailablePoints(prev => prev - value);
    }
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      const token = localStorage.getItem('token');
      const response = await axios.post('http://localhost:5000/api/character', 
        { name, class: characterClass, strength, dexterity, intelligence },
        { headers: { Authorization: `Bearer ${token}` } }
      );
      onCharacterCreated(response.data);
    } catch (error) {
      console.error('Error creating character:', error);
    }
  };

  return (
    <CreateCharacterContainer>
      <h2>Create Character</h2>
      <form onSubmit={handleSubmit}>
        <Input
          type="text"
          placeholder="Character Name"
          value={name}
          onChange={(e) => setName(e.target.value)}
          required
        />
        <Select
          value={characterClass}
          onChange={(e) => setCharacterClass(e.target.value)}
        >
          <option value="Warrior">Warrior</option>
          <option value="Mage">Mage</option>
          <option value="Archer">Archer</option>
        </Select>
        <p>Available points: {availablePoints}</p>
        <StatContainer>
          <span>Strength: {strength}</span>
          <div>
            <StatButton type="button" onClick={() => handleStatChange('strength', -1)} disabled={strength <= 10}>-</StatButton>
            <StatButton type="button" onClick={() => handleStatChange('strength', 1)} disabled={availablePoints <= 0}>+</StatButton>
          </div>
        </StatContainer>
        <StatContainer>
          <span>Dexterity: {dexterity}</span>
          <div>
            <StatButton type="button" onClick={() => handleStatChange('dexterity', -1)} disabled={dexterity <= 10}>-</StatButton>
            <StatButton type="button" onClick={() => handleStatChange('dexterity', 1)} disabled={availablePoints <= 0}>+</StatButton>
          </div>
        </StatContainer>
        <StatContainer>
          <span>Intelligence: {intelligence}</span>
          <div>
            <StatButton type="button" onClick={() => handleStatChange('intelligence', -1)} disabled={intelligence <= 10}>-</StatButton>
            <StatButton type="button" onClick={() => handleStatChange('intelligence', 1)} disabled={availablePoints <= 0}>+</StatButton>
          </div>
        </StatContainer>
        <Button type="submit">Create Character</Button>
      </form>
    </CreateCharacterContainer>
  );
};

export default CreateCharacter;

// Далее код файла components\Dashboard\Dashboard.js:
import React, { useEffect, useState } from 'react';
import axios from 'axios';
import Character from '../Character/Character';
import CharacterInfo from '../Character/CharacterStats';
import Inventory from '../Inventory/Inventory';
import Skills from '../Skills/Skills';

const Tab = ({ label, active, onClick }) => (
  <button
    className={`px-4 py-2 font-bold transition-colors duration-200 
      ${active ? 'bg-blue-500 text-white' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'}
      first:rounded-tl-lg last:rounded-tr-lg`}
    onClick={onClick}
  >
    {label}
  </button>
);

const TabContent = ({ children }) => (
  <div className="bg-gray-100 rounded-b-lg rounded-tr-lg p-4">
    {children}
  </div>
);

const Dashboard = () => {
  const [user, setUser] = useState(null);
  const [character, setCharacter] = useState(null);
  const [activeTab, setActiveTab] = useState('characteristics');

  useEffect(() => {
    fetchUserData();
  }, []);

  const fetchUserData = async () => {
    const token = localStorage.getItem('token');
    if (token) {
      try {
        const userResponse = await axios.get('http://localhost:5000/api/auth/me', {
          headers: { Authorization: `Bearer ${token}` }
        });
        setUser(userResponse.data);
        const characterResponse = await axios.get('http://localhost:5000/api/character', {
          headers: { Authorization: `Bearer ${token}` }
        });
        setCharacter(characterResponse.data);
      } catch (error) {
        console.error('Error fetching data:', error);
      }
    }
  };

  const handleCharacterUpdate = (updatedCharacter) => {
    setCharacter(updatedCharacter);
  };

  const handleEquipItem = async (itemId, slot) => {
    try {
      const token = localStorage.getItem('token');
      const response = await axios.post('http://localhost:5000/api/character/equip', 
        { itemId, slot },
        { headers: { Authorization: `Bearer ${token}` } }
      );
      setCharacter(response.data);
    } catch (error) {
      console.error('Error equipping item:', error);
    }
  };

  if (!user || !character) {
    return <div className="text-center p-4">Loading...</div>;
  }

  return (
    <div className="max-w-2xl mx-auto bg-white p-4 rounded-lg shadow-lg">
      <Character character={character} />
      
      <div className="flex mt-4">
        <Tab label="Характеристики" active={activeTab === 'characteristics'} onClick={() => setActiveTab('characteristics')} />
        <Tab label="Инвентарь" active={activeTab === 'inventory'} onClick={() => setActiveTab('inventory')} />
        <Tab label="Навыки" active={activeTab === 'skills'} onClick={() => setActiveTab('skills')} />
      </div>

      <TabContent>
        {activeTab === 'characteristics' && <CharacterInfo character={character} onCharacterUpdate={handleCharacterUpdate} showDetailedStats={true} />}
        {activeTab === 'inventory' && <Inventory inventory={character.inventory || []} onEquipItem={handleEquipItem} />}
        {activeTab === 'skills' && <Skills skills={character.skills || []} />}
      </TabContent>
    </div>
  );
};

export default Dashboard;

// Далее код файла components\Inventory\Inventory.js:
import React, { useState } from 'react';

const CategoryTab = ({ id, name, active, onClick }) => (
  <button
    className={`px-4 py-2 font-bold transition-colors duration-200 
      ${active ? 'bg-blue-500 text-white' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'}
      first:rounded-tl-lg last:rounded-tr-lg`}
    onClick={() => onClick(id)}
  >
    {name}
  </button>
);

const ItemSlot = ({ item, onEquipItem }) => (
  <div
    className="aspect-square bg-white border border-gray-300 rounded-md flex flex-col justify-center items-center p-1 text-xs text-center cursor-pointer transition-colors duration-200 hover:bg-gray-100"
    onClick={() => item && onEquipItem(item.id, item.slot)}
  >
    {item && (
      <>
        <div className="font-bold mb-1 text-gray-800 truncate w-full">{item.name}</div>
        <div className="text-gray-600">x{item.quantity}</div>
      </>
    )}
  </div>
);

const Inventory = ({ inventory, onEquipItem }) => {
  const [activeCategory, setActiveCategory] = useState('all');

  const categories = [
    { id: 'all', name: 'Все' },
    { id: 'weapon', name: 'Оружие' },
    { id: 'armor', name: 'Броня' },
    { id: 'potion', name: 'Зелья' },
    { id: 'misc', name: 'Предметы' },
  ];

  const filteredInventory = inventory.filter(item => 
    activeCategory === 'all' || item.category === activeCategory
  );

  return (
    <div>
      <div className="flex mt-4">
        {categories.map(category => (
          <CategoryTab
            key={category.id}
            id={category.id}
            name={category.name}
            active={activeCategory === category.id}
            onClick={setActiveCategory}
          />
        ))}
      </div>
      <div className="grid grid-cols-4 sm:grid-cols-6 md:grid-cols-6 lg:grid-cols-7 gap-1 bg-gray-200 p-2 rounded-b-lg rounded-tr-lg">
        {filteredInventory.map((item, index) => (
          <ItemSlot key={index} item={item} onEquipItem={onEquipItem} />
        ))}
        {[...Array(24 - filteredInventory.length)].map((_, index) => (
          <ItemSlot key={`empty-${index}`} />
        ))}
      </div>
    </div>
  );
};

export default Inventory;

// Далее код файла components\Skills\Skills.js:
import React, { useState } from 'react';

const CategoryTab = ({ id, name, active, onClick }) => (
  <button
    className={`px-4 py-2 font-bold transition-colors duration-200 
      ${active ? 'bg-blue-500 text-white' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'}
      first:rounded-tl-lg last:rounded-tr-lg`}
    onClick={() => onClick(id)}
  >
    {name}
  </button>
);

const SkillSlot = ({ skill }) => (
  <div className="aspect-square bg-white border border-gray-300 rounded-md flex flex-col justify-center items-center p-1 text-xs text-center">
    {skill && (
      <>
        <div className="font-bold mb-1 text-gray-800 truncate w-full">{skill.name}</div>
        <div className="text-gray-600">Ур. {skill.level}</div>
      </>
    )}
  </div>
);

const Skills = ({ skills }) => {
  const [activeCategory, setActiveCategory] = useState('all');

  const categories = [
    { id: 'all', name: 'Все' },
    { id: 'attack', name: 'Атака' },
    { id: 'defense', name: 'Защита' },
    { id: 'healing', name: 'Лечение' },
  ];

  const filteredSkills = skills.filter(skill => 
    activeCategory === 'all' || skill.category === activeCategory
  );

  return (
    <div>
      <div className="flex mt-4">
        {categories.map(category => (
          <CategoryTab
            key={category.id}
            id={category.id}
            name={category.name}
            active={activeCategory === category.id}
            onClick={setActiveCategory}
          />
        ))}
      </div>
      <div className="grid grid-cols-4 sm:grid-cols-6 md:grid-cols-6 lg:grid-cols-7 gap-1 bg-gray-200 p-2 rounded-b-lg rounded-tr-lg">
        {filteredSkills.map((skill, index) => (
          <SkillSlot key={index} skill={skill} />
        ))}
        {[...Array(24 - filteredSkills.length)].map((_, index) => (
          <SkillSlot key={`empty-${index}`} />
        ))}
      </div>
    </div>
  );
};

export default Skills;

// Далее код файла pages\DashboardPage.js:
import React from 'react';
import Dashboard from '../components/Dashboard/Dashboard';

const DashboardPage = () => {
  return (
    <div>
      <Dashboard />
    </div>
  );
};

export default DashboardPage;

// Далее код файла pages\LoginPage.js:
import React from 'react';
import Login from '../components/Auth/Login';

const LoginPage = () => {
  return (
    <div>
      <h1>Вход в игру</h1>
      <Login />
    </div>
  );
};

export default LoginPage;

// Далее код файла pages\RegisterPage.js:
import React from 'react';
import Register from '../components/Auth/Register';

const RegisterPage = () => {
  return (
    <div>
      <h1>Регистрация в игре</h1>
      <Register />
    </div>
  );
};

export default RegisterPage;

